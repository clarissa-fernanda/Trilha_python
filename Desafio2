import textwrap

def mostrar_menu():
    return input(""" 
Selecione a operação:
[1] Depósito 
[2] Saque 
[3] Extrato
[4] Criar Cliente
[5] Criar Conta
[6] Listar Contas
[7] Novo Usuário
[8] Sair
Opção: """)

def criar_cliente(usuarios):
    cpf = input("Informe o CPF (somente números): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n@@@ Já existe usuário com esse CPF! @@@")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})
    print("=== Usuário criado com sucesso! ===")


def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None


def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n=== Conta criada com sucesso! ===")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("\n@@@ Usuário não encontrado, fluxo de criação de conta encerrado! @@")


def listar_contas(contas):
    if not contas:
        print("Não há contas cadastradas.")
        return
    
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))


def deposito(saldo, extrato,/):
    valor = float(input("Digite o valor para depósito: R$ "))
    if valor > 0:
        saldo += valor
        extrato.append(f"Depósito: +R$ {valor:.2f}")
        print(f"Depósito de R$ {valor:.2f} realizado com sucesso.")
    else:
        print("Operação inválida. O depósito deve ser um valor positivo.")
    return saldo, extrato


def saque(*,saldo, extrato, limite_do_saque):
    valor = float(input("Digite o valor para saque: R$ "))
    if 0 < valor <= saldo and valor <= limite_do_saque:
        saldo -= valor
        extrato.append(f"Saque: -R$ {valor:.2f}")
        print(f"Saque de R$ {valor:.2f} realizado com sucesso.")
    elif valor > limite_do_saque:
        print(f"Valor ultrapassa o limite do saque de R$ {limite_do_saque:.2f}.")
    elif valor > saldo:
        print("Saldo insuficiente.")
    else:
        print("Valor inválido. O saque deve ser um valor positivo.")
    return saldo, extrato


def extrato_bancario(extrato, saldo):
    print("\n------ Extrato ------")
    if not extrato:
        print("Não foram realizadas movimentações.")
    else:
        for operacao in extrato:
            print(operacao)
    print(f"Saldo atual: R$ {saldo:.2f}")
    print("---------------------\n")


def main():
    saldo = 0
    limite_do_saque = 500
    extrato = []
    usuarios = []
    contas = []
    agencia = "0001"  # Exemplo de agência
    LIMITE_SAQUES = 3




    while True:
        opcao = mostrar_menu()
        if opcao == '1':
            saldo, extrato = deposito(saldo, extrato)
        elif opcao == '2':
        

            saldo, extrato = saque (
                saldo=saldo,
                extrato=extrato,
                limite_do_saque=limite_do_saque
            )
        elif opcao == '3':
            extrato_bancario(extrato, saldo)
        elif opcao == '4':
            criar_cliente(usuarios)
        elif opcao == '5':
            numero_conta = len(contas) + 1  # Exemplo simples para gerar número da conta
            conta = criar_conta(agencia, numero_conta, usuarios)
            if conta:
                contas.append(conta)
        elif opcao == '6':
            listar_contas(contas)
        elif opcao == '7':
            criar_cliente(usuarios)
        elif opcao == '8':
            print("Saindo do sistema. Obrigado por usar nosso banco!")
            break
        else:
            print("Opção inválida. Por favor, selecione uma opção válida.")

if __name__ == "__main__":
    main()
